name: Validate Standards

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
    paths:
      - 'core/**'
      - 'extensions/**'
      - 'proposals/**'

jobs:
  validate-format:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        pip install markdown-it-py pyyaml jsonschema
    
    - name: Validate markdown format
      run: |
        echo "Checking markdown files for proper format..."
        find . -name "*.md" -type f | while read file; do
          echo "Validating: $file"
          python -m markdown_it "$file" > /dev/null || exit 1
        done
    
    - name: Check required sections
      run: |
        echo "Checking for required sections in standards..."
        for file in core/LCS-*.md extensions/LES-*.md; do
          if [ -f "$file" ]; then
            echo "Checking $file"
            grep -q "## Abstract" "$file" || echo "Missing Abstract in $file"
            grep -q "## Motivation" "$file" || echo "Missing Motivation in $file"
            grep -q "## Specification" "$file" || echo "Missing Specification in $file"
            grep -q "## Security Considerations" "$file" || echo "Missing Security Considerations in $file"
            grep -q "## Copyright" "$file" || echo "Missing Copyright in $file"
          fi
        done

  check-links:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Link Checker
      uses: lycheeverse/lychee-action@v1.8.0
      with:
        args: --verbose --no-progress './**/*.md'
        fail: false

  validate-references:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Check cross-references
      run: |
        echo "Checking internal references..."
        for file in core/*.md extensions/*.md; do
          if [ -f "$file" ]; then
            # Extract references to other standards
            grep -o "LCS-[0-9]\+" "$file" | while read ref; do
              ref_file="core/${ref}.md"
              if [ ! -f "$ref_file" ] && [ "$ref" != "$(basename $file .md)" ]; then
                echo "Invalid reference to $ref in $file"
                exit 1
              fi
            done
          fi
        done

  spell-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Spell Check
      uses: streetsidesoftware/cspell-action@v2
      with:
        files: |
          **/*.md
        config: |
          {
            "version": "0.2",
            "language": "en",
            "words": [
              "llmconsent",
              "LLMConsent",
              "blockchain",
              "cryptographic",
              "decentralized",
              "solidity",
              "ethereum",
              "consensys",
              "IPFS",
              "zkproof",
              "rollup",
              "rollups",
              "interoperability",
              "tokenization",
              "cryptographically",
              "sublicense",
              "Subhadip",
              "Mitra"
            ],
            "ignoreWords": [],
            "ignorePaths": [
              "node_modules/**",
              ".git/**",
              "*.json",
              "*.yml"
            ]
          }

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Trivy security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build-site:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Test build documentation site
      run: |
        echo "Documentation site build test..."
        # Future: Add actual documentation build here
        echo "Build successful"

  notify:
    needs: [validate-format, check-links, validate-references, spell-check]
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
    - name: Notify failure
      run: |
        echo "Validation failed. Please check the errors above."
        exit 1